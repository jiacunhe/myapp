<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hyrt.saic.dao.OrderResultMapper" >
  <resultMap id="BaseResultMap" type="com.hyrt.saic.bean.OrderResult" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="orderId" property="orderId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="returnTime" property="returnTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hyrt.saic.bean.OrderResult" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, orderId, status, returnTime, remark
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_order_result
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order_result
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hyrt.saic.bean.OrderResult" >
    insert into t_order_result (id, orderId, status, 
      returnTime, remark, content
      )
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, #{status,jdbcType=CHAR},
      #{returnTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hyrt.saic.bean.OrderResult" >
    insert into t_order_result
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderId != null" >
        orderId,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="returnTime != null" >
        returnTime,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="returnTime != null" >
        #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hyrt.saic.bean.OrderResult" >
    update t_order_result
    <set >
      <if test="orderid != null" >
        orderId = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="returnTime != null" >
        returnTime = #{returnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hyrt.saic.bean.OrderResult" >
    update t_order_result
    set orderId = #{orderId,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      returnTime = #{returnTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hyrt.saic.bean.OrderResult" >
    update t_order_result
    set orderId = #{orderId,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      returnTime = #{returnTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>